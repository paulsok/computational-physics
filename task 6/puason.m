disp('"Решение уравнения Пуассона')
disp('с граничными условиями в форме Дирихле')
disp('в прямоугольной области."')
%% 
%pause(3)
N=31;  % (N+1)*(N+1) - узлов
M=[];
i=1:N+1;
j=1:N+1;
mu(i,1)=50;    % потенциал на левой границе
mu(i,N+1)=50;  % потенциал на правой границе
mu(1,j)=100;   % потенциал на нижней границе  
mu(N+1,j)=100; % потенциал на верхней границе
% задание начального приближения
kx=2:N;
ky=2:N;
mu(kx,ky)=N; 
Omega=1;   % параметр релаксации
           % Omega>1 - "верхняя релаксация"
           % Omega<1 - "нижняя релаксация"
Niter=N*15;% число итераций
% решение уравнения Лапласа
z=interationL(N,Omega,Niter,mu);
% вычисление векторов и матриц для построения карты линия уровня
x(i)=(i-1)/N;
y(i)=(j-1)/N;
[x1 y1]=meshgrid(x,y);
K=5; % номер итерации для построения карты линий уровня
N1=(N+1)*K+1;
N2=(N+1)*(K+1);
A=z(1:N+1,N1:N2); % выделение К-того решения из общей матрицы решений
[C,h]=contour(x1,y1,A,N);
% последовательность команд для создания анимационного клипа
set(gca,'nextplot','replacechildren'); % задание режима перерисовки
                                       % карты в одном и том же окне
% создание кадров анимационного клипа
for K=2:Niter-1
    N1=(N+1)*(K-1)+1;
    N2=(N+1)*K;
    A=z(1:N+1,N1:N2);
    [C,h]=contour(x1,y1,A,N);
    F(K-1)=getframe; % создание одного кадра анимации
    xlabel('X');
    ylabel('Y');
    grid on
    title('The density of the electrostatic field lines.');
    M=[M,getframe(gcf)]; % запись кадров анимации
end
colorbar; 
%{
M=[M,getframe(gcf)]; 
movie2avi(M,'puason.avi','QUALITY',99) % запись видео
save puason F
%}
%{
% повторное вопроизведение кадров анимации
movie(F,n) % где F - имя переменной, в которую 
                     помещены кадры
           % n - число повторений клипа
%}
